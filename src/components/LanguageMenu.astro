---
import { getLocale } from 'astro-i18n-aut'
import ChevronIcon from '~/icons/ChevronIcon.jsx'
import { useTranslations } from '~/locales/index.ts'

// ! 每添加一个新语言，这里都要加上新语言，保证语言切换 url 的有效性
const urlReg = /^\/(zh\/)?/

const languageList = [
  {
    base: '/',
    name: 'English',
    locale: 'en',
  },
  {
    base: '/zh/',
    name: '简体中文',
    locale: 'zh',
  },
]

const t = useTranslations(Astro.url)
console.log('Astro.url: ', Astro.url)

const locale = getLocale(Astro.url)
const currentLocale = languageList.find((item) => item.locale === locale)?.name

// 获取当前页面的路径
const currentPath = Astro.url.pathname
---

<details id="resources-menu" class="group relative">
  <summary class="accordion link flex cursor-pointer items-center gap-2">
    {currentLocale}
    <span class="sr-only">{t('header.language.openLanguageMenu')}</span>
    <ChevronIcon
      class="inline-block size-3 rotate-0 transition-transform group-open:-rotate-180 duration-500"
      aria-hidden="true"
    />
  </summary>
  <ul
    class:list={[
      // flex
      'flex flex-col',

      // positioning
      'absolute left-0 top-full translate-y-2',

      // panel styling
      'min-w-44 rounded-xl bg-astro-dark-800 p-1 text-astro-gray-200 shadow-lg border border-astro-dark-100/10',

      // transitioning
      'invisible group-open:visible',
      'origin-top scale-95 group-open:scale-100',
      'opacity-0 group-open:opacity-100',
      'transition-all duration-500',
    ]}
  >
    {
      languageList.map((item) => (
        <li>
          <a
            href={item.base + currentPath.replace(urlReg, '')}
            data-astro-prefetch
            class="flex items-center gap-2 rounded-md p-3 leading-none transition hover:bg-astro-dark-700 hover:text-white"
          >
            {item.name}
          </a>
        </li>
      ))
    }
  </ul>
</details>

<script>
  const menu = document.querySelector<HTMLDetailsElement>('#resources-menu')!

  menu.addEventListener('focusout', () => {
    if (!menu.matches(':focus-within')) {
      // delay the transition on focustout so the menu doesn't immediately disappear
      setTimeout(() => {
        menu.open = false
      }, 200)
    }
  })
</script>
