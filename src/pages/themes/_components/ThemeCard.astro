---
import { Image } from "astro:assets";
import { getLocale } from 'astro-i18n-aut'
import Card from "~/components/Card.astro";
import CardBody from "~/components/CardBody.astro";
import CardFooter from "~/components/CardFooter.astro";
import type { ThemeAndAuthor } from "../_types/index.ts";
import Avatar from "./Avatar.astro";
import Badge from "./Badge.astro";
import { useTranslations } from "~/locales/index.ts";

export type Props = {
	theme: ThemeAndAuthor;
};

const { theme } = Astro.props;

const image = theme.image;

const locale = getLocale(Astro.url)

const t = useTranslations(Astro.url)
---

<Card isLink>
	<!-- {!!theme.data.badge && <CardBadge>{theme.data.badge}</CardBadge>} -->
	<a class="flex h-full flex-col" href={`/${locale}/themes/details/${theme.slug}/`} data-astro-prefetch>
	{image &&	<Image
			src={image}
			width={600}
			height={400}
			alt=""
			class="aspect-video w-full object-cover"
			loading="lazy"
			decoding="async"
		/>}
		<CardBody>
			<div>
				<!-- <h3 class:list={["heading-5 mb-2 text-white", { official: theme.data.official }]}> -->
				<h3 class:list={["heading-5 mb-2 text-white"]}>
					{theme.title}
				</h3>
				<p class="line-clamp-3">{theme.description}</p>
			</div>
			<CardFooter
				class="grid grid-cols-[1fr,auto] items-center justify-between gap-2 overflow-hidden border-t border-astro-gray-400 pt-6"
			>
				<Avatar theme={theme} />

				<Badge theme={theme.paid ? "primary" : "secondary"} class="z-10">
					{theme.paid ? t('templateDetail.label.paid') : t('templateDetail.label.free')}
				</Badge>
			</CardFooter>
		</CardBody>
	</a>
</Card>

<style>
	.official::after {
		@apply ml-1 inline-block h-5 w-5 translate-y-[2px] bg-contain bg-no-repeat;
		content: "";
		background-image: url(/assets/official.svg);
	}
</style>
